name: Deploy Application

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PORT: ${{ vars.PORT }}
  EC2_HOST: ${{ vars.EC2_HOST }}
  EC2_USER: ${{ vars.EC2_USER }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  PG_USER: ${{ secrets.DB_USERNAME }}
  PG_PASSWORD: ${{ secrets.DB_PASSWORD }}
  PG_HOST: ${{ vars.PG_HOST }}
  PG_DATABASE: ${{ vars.PG_DATABASE }}
  PG_PORT: ${{ vars.PG_PORT }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # - name: Install AWS CLI
    #   run: |
    #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    #     unzip awscliv2.zip
    #     sudo ./aws/install --update

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Copy server folder to EC2 via SCP
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ vars.EC2_HOST }}
        USER: ${{ vars.EC2_USER }}
      run: |
        touch key.pem
        echo "$PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        echo "export PORT=$PORT" > .bashrc
        echo "export EC2_HOST=$EC2_HOST" >> .bashrc
        echo "export EC2_USER=$EC2_USER" >> .bashrc
        echo "export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .bashrc
        echo "export GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .bashrc
        echo "export PG_USER=$PG_USER" >> .bashrc
        echo "export PG_PASSWORD=$PG_PASSWORD" >> .bashrc
        echo "export PG_HOST=$PG_HOST" >> .bashrc
        echo "export PG_DATABASE=$PG_DATABASE" >> .bashrc
        echo "export PG_PORT=$PG_PORT" >> .bashrc
        scp -i key.pem -o StrictHostKeyChecking=no -r ./server .bashrc $USER@$HOST:/home/$USER/

    - name: Install packages, build, and run
      env:
        HOST: ${{ env.EC2_HOST }}
        USER: ${{ env.EC2_USER }}
      run: |
        echo "$USER@$HOST"
        ssh -i key.pem -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
        cd server
        source ~/.bashrc
        npm install
        npm run build
        fuser -k ${PORT}/tcp || true
        nohup npm start > server.log 2>&1 &
        EOF
